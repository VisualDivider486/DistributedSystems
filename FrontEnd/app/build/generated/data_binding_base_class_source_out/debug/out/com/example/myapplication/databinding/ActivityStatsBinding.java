// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import com.github.mikephil.charting.charts.BarChart;
import com.google.android.material.appbar.MaterialToolbar;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityStatsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final BarChart barChartDistance;

  @NonNull
  public final BarChart barChartElevation;

  @NonNull
  public final BarChart barChartTime;

  @NonNull
  public final TextView distanceDifference;

  @NonNull
  public final TextView elevationDifference;

  @NonNull
  public final TextView message;

  @NonNull
  public final TextView timeDifference;

  @NonNull
  public final MaterialToolbar toolbar;

  private ActivityStatsBinding(@NonNull ConstraintLayout rootView,
      @NonNull BarChart barChartDistance, @NonNull BarChart barChartElevation,
      @NonNull BarChart barChartTime, @NonNull TextView distanceDifference,
      @NonNull TextView elevationDifference, @NonNull TextView message,
      @NonNull TextView timeDifference, @NonNull MaterialToolbar toolbar) {
    this.rootView = rootView;
    this.barChartDistance = barChartDistance;
    this.barChartElevation = barChartElevation;
    this.barChartTime = barChartTime;
    this.distanceDifference = distanceDifference;
    this.elevationDifference = elevationDifference;
    this.message = message;
    this.timeDifference = timeDifference;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityStatsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityStatsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_stats, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityStatsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.barChartDistance;
      BarChart barChartDistance = ViewBindings.findChildViewById(rootView, id);
      if (barChartDistance == null) {
        break missingId;
      }

      id = R.id.barChartElevation;
      BarChart barChartElevation = ViewBindings.findChildViewById(rootView, id);
      if (barChartElevation == null) {
        break missingId;
      }

      id = R.id.barChartTime;
      BarChart barChartTime = ViewBindings.findChildViewById(rootView, id);
      if (barChartTime == null) {
        break missingId;
      }

      id = R.id.distanceDifference;
      TextView distanceDifference = ViewBindings.findChildViewById(rootView, id);
      if (distanceDifference == null) {
        break missingId;
      }

      id = R.id.elevationDifference;
      TextView elevationDifference = ViewBindings.findChildViewById(rootView, id);
      if (elevationDifference == null) {
        break missingId;
      }

      id = R.id.message;
      TextView message = ViewBindings.findChildViewById(rootView, id);
      if (message == null) {
        break missingId;
      }

      id = R.id.timeDifference;
      TextView timeDifference = ViewBindings.findChildViewById(rootView, id);
      if (timeDifference == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityStatsBinding((ConstraintLayout) rootView, barChartDistance,
          barChartElevation, barChartTime, distanceDifference, elevationDifference, message,
          timeDifference, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
